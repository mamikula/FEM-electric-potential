### Zadanie obliczeniowe - Metoda Elementów Skończonych
### równanie przepływu ciepła

# liczba elementów
n <- 5


#punkty podziału
x_i <- function(i){
  return(2*i/n)
}


# funkcje bazowe
e <- function(x, i){
  if (x > x_i(i-1) && x <= x_i(i)){
    return (n/2*x - i + 1)
  }
  else if (x > x_i(i) && x < x_i(i+1)){
    return (-n/2*x + i + 1)
  }
  else {
    return (0)
  }
}


# pochodna funkcji bazowej
e_prim <- function(x, i){
  if (x > x_i(i-1) && x <= x_i(i)){
    return (n/2)
  }
  else if (x > x_i(i) && x < x_i(i+1)){
    return (-n/2)
  }
  else {
    return (0)
  }
}


# funkcja rysująca funkcje bazowe
plot_basis <- function(){
  plot(seq(0, 2, 1/(100*n)), mapply(e, seq(0, 2, 1/(100*n)), 1), 
       main = 'funkcje bazowe',
       xlab='',
       ylab='',
       type='l')
  for (i in 1:n-1){
    lines(seq(0, 2, 1/(10*n)), mapply(e, seq(0, 2, 1/(10*n)), i))
  }
}


# całkowanie kwadraturą Gaussa-Legendre’a 
# (2 punkty kwadratury)
integrate <- function(f, a, b){
  return(
    (b-a)/2*(
      f((b-a)/2*(1/sqrt(3)) + (b+a)/2)
      + f((b-a)/2*(-1/sqrt(3)) + (b+a)/2)
    )
  )
}


# funkcja podcałkowa
#  - iloczyn pochodnych funkcji bazowych
u_prim_v_prim <- function(i, j){
  return (function(x){
      return(e_prim(x, i)*e_prim(x, j))
    }
  )
}

# lewa strona sformułowania wariacyjnego
# forma dwuliniowa
B <- function(i, j){
  
  from = max(0, x_i(i-1), x_i(j-1))
  to = min(x_i(i+1), x_i(j+1))
  
  return(
    e(0, i)*e(0, j) - integrate(u_prim_v_prim(i,j), from, to)
  )
}

# prawa strona sformułowania wariacyjnego
# forma liniowa
L <- function(i){
  return(20*e(0, i))
}


# główna funkcja znajdująca rozwiązanie równania
solution <- function(){
  # tworzenie głownej macierzy układu równań
  M <- matrix(0, nrow=n, ncol=n)
  
  for (i in 1:n){
    for (j in 1:n){
      M[i,j] <- B(j-1, i-1)
    }
  }
  
  # kolumna wyrazów obcych
  C <- vector()
  for (i in 1:n){
    C = c(C, L(i-1))
  }
  
  # rozwiązanie układu
  vs = solve(M, C)
  
  # kombinacja liniowa funkcji bazowych
  result_function <- function(x, v = vs){
    result = 0
    for (i in 1:n){
      result = result + v[i]*e(x, i-1)
    }
    return(result)
  }
  
  return (result_function)
}

# funkcja rysująca rozwiązanie równania
plot_result <- function(){
  u = solution()
  plot(seq(0, 2, 1/(100*n)), 
       mapply(u, seq(0, 2, 1/(100*n))),
       main = 'rozwiązanie równania transportu ciepła',
       xlab=' ',
       ylab=' ',
       type='l')
}

plot_result()
